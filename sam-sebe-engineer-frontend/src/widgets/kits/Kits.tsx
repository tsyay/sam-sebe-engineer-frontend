import { useState } from "react";
import { KitsCard } from "./ui";
import KitImage from "./ui/assets/images/kit.webp";

export const Kits = () => {
  const [activeIndex, setActiveIndex] = useState<number | null>(null);

  const kits = [
    {
      title: "Юный радиотехник",
      description:
        "Этот набор превращает ребёнка в настоящего маленького инженера! Он познакомится с основами электроники и радиотехники через практическое конструирование. С помощью макетной платы и комплектующих можно собирать десятки уникальных схем без пайки: от простых светодиодных миганий до миниатюрных радиопередатчиков. Набор развивает логическое мышление, внимание к деталям и творческое воображение, а каждая собранная схема приносит радость и уверенность. Идеально для самостоятельных экспериментов и первых шагов в мире технологий — ребёнок почувствует себя настоящим инженером, создающим магию своими руками!",
      image: KitImage,
    },
    {
      title: "Своя игровая консоль",
      description:
        "Создай свою собственную портативную игровую консоль с нуля! В набор входит микроконтроллер ESP32, цветной экран, корпус, кнопки и все необходимые компоненты. Ребёнок научится программировать простые игры, управлять дисплеем и кнопками, а затем сможет запускать свои творения на настоящем устройстве. Это не просто игра — это полный опыт создания техники своими руками: от идеи до готового гаджета. Набор развивает инженерное мышление, логику, креативность и уверенность в своих силах. Идеально для маленьких геймеров, инженеров и будущих разработчиков, которые хотят видеть результат своих трудов в реальном мире!",
      image: KitImage,
    },
  ];

  return (
    <div className="py-[64px] flex flex-col gap-3">
      <h2 className="text-[72px]">Наборы</h2>
      <div className="w-full h-fit flex flex-row gap-3 overflow-hidden">
        {kits.map((kit, index) => (
          <KitsCard
            key={index}
            title={kit.title}
            description={kit.description}
            image={kit.image}
            active={activeIndex === index}
            faded={activeIndex !== null && activeIndex !== index}
            side={index === 0 ? "left" : "right"}
            onHover={() => setActiveIndex(index)}
            onLeave={() => setActiveIndex(null)}
          />
        ))}
      </div>
    </div>
  );
};
